// Job Detail Page JavaScript Functions

// Function to handle phone call
function callPhone(phoneNumber) {
    if (confirm(`B·∫°n c√≥ mu·ªën g·ªçi ƒëi·ªán tho·∫°i ƒë·∫øn s·ªë ${phoneNumber}?`)) {
        window.location.href = `tel:${phoneNumber}`;
    }
}

// Function to open Zalo chat
function openZalo(phoneNumber) {
    const zaloUrl = `https://zalo.me/${phoneNumber}`;
    window.open(zaloUrl, '_blank');
}

// Function to open Facebook profile
function openFacebook(facebookUrl) {
    if (facebookUrl && facebookUrl !== '#') {
        window.open(facebookUrl, '_blank');
    } else {
        alert('Th√¥ng tin Facebook ch∆∞a ƒë∆∞·ª£c c·∫≠p nh·∫≠t.');
    }
}

// Function to show consultation modal
function showConsultation() {
    const modal = document.createElement('div');
    modal.className = 'consultation-modal-overlay';
    modal.innerHTML = `
        <div class="consultation-modal">
            <div class="modal-header">
                <h3><i class="fas fa-user-tie"></i> ƒêƒÉng k√Ω t∆∞ v·∫•n mi·ªÖn ph√≠</h3>
                <button class="close-btn" onclick="closeConsultationModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="consultationForm" onsubmit="submitConsultation(event)">
                    <div class="form-group">
                        <label for="consultName">H·ªç v√† t√™n *</label>
                        <input type="text" id="consultName" name="consultName" required placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n">
                    </div>
                    <div class="form-group">
                        <label for="consultPhone">S·ªë ƒëi·ªán tho·∫°i *</label>
                        <input type="tel" id="consultPhone" name="consultPhone" required placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i">
                    </div>
                    <div class="form-group">
                        <label for="consultEmail">Email</label>
                        <input type="email" id="consultEmail" name="consultEmail" placeholder="Nh·∫≠p email c·ªßa b·∫°n">
                    </div>
                    <div class="form-group">
                        <label for="consultMessage">N·ªôi dung t∆∞ v·∫•n</label>
                        <textarea id="consultMessage" name="consultMessage" rows="4" placeholder="Nh·∫≠p n·ªôi dung b·∫°n mu·ªën t∆∞ v·∫•n..."></textarea>
                    </div>
                    <button type="submit" class="submit-btn">
                        <i class="fas fa-paper-plane"></i> G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n
                    </button>
                </form>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    document.body.style.overflow = 'hidden';
}

// Function to close consultation modal
function closeConsultationModal() {
    const modal = document.querySelector('.consultation-modal-overlay');
    if (modal) {
        modal.remove();
        document.body.style.overflow = 'auto';
    }
}

// Function to submit consultation form
function submitConsultation(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = {
        name: formData.get('consultName'),
        phone: formData.get('consultPhone'),
        email: formData.get('consultEmail'),
        message: formData.get('consultMessage')
    };
    
    // Validate phone number
    const phoneRegex = /^(0|\+84)[3|5|7|8|9][0-9]{8}$/;
    if (!phoneRegex.test(data.phone.replace(/\s/g, ''))) {
        alert('S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i Vi·ªát Nam.');
        return;
    }
    
    // Simulate form submission
    alert(`C·∫£m ∆°n ${data.name}! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n qua s·ªë ${data.phone} trong th·ªùi gian s·ªõm nh·∫•t.`);
    closeConsultationModal();
}

// Function to show employer info
function showEmployerInfo() {
    const modal = document.createElement('div');
    modal.className = 'info-modal-overlay';
    modal.innerHTML = `
        <div class="info-modal">
            <div class="modal-header">
                <h3><i class="fas fa-building"></i> Th√¥ng tin nh√† tuy·ªÉn d·ª•ng</h3>
                <button class="close-btn" onclick="closeInfoModal()">&times;</button>
            </div>
            <div class="modal-body">
                <div class="employer-info">
                    <h4>C√¥ng ty: V√πng Ryazan, g Sasovo, ul.Pushkin, 21</h4>
                    <p><strong>Qu·ªëc gia:</strong> Li√™n Bang Nga</p>
                    <p><strong>ƒê·ªãa ch·ªâ:</strong> V√πng Ryazan, g Sasovo, ul.Pushkin, 21</p>
                    <p><strong>Ng√†nh ngh·ªÅ:</strong> S·∫£n xu·∫•t, C∆° kh√≠</p>
                    <p><strong>Quy m√¥:</strong> 100-500 nh√¢n vi√™n</p>
                    <p><strong>M√¥ t·∫£:</strong> C√¥ng ty chuy√™n s·∫£n xu·∫•t c√°c s·∫£n ph·∫©m ƒë√∫c kim lo·∫°i, c√≥ nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c n√†y.</p>
                    
                    <div class="employer-benefits">
                        <h5>Quy·ªÅn l·ª£i nh√¢n vi√™n:</h5>
                        <ul>
                            <li>L∆∞∆°ng c·∫°nh tranh theo nƒÉng l·ª±c</li>
                            <li>B·∫£o hi·ªÉm y t·∫ø ƒë·∫ßy ƒë·ªß</li>
                            <li>Ch·ªó ·ªü mi·ªÖn ph√≠</li>
                            <li>H·ªó tr·ª£ v√© m√°y bay</li>
                            <li>M√¥i tr∆∞·ªùng l√†m vi·ªác an to√†n</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    document.body.style.overflow = 'hidden';
}

// Function to close info modal
function closeInfoModal() {
    const modal = document.querySelector('.info-modal-overlay');
    if (modal) {
        modal.remove();
        document.body.style.overflow = 'auto';
    }
}

// Function to show candidate notes
function showCandidateNotes() {
    const modal = document.createElement('div');
    modal.className = 'notes-modal-overlay';
    modal.innerHTML = `
        <div class="notes-modal">
            <div class="modal-header">
                <h3><i class="fas fa-exclamation-triangle"></i> L∆∞u √Ω d√†nh cho ·ª©ng vi√™n</h3>
                <button class="close-btn" onclick="closeNotesModal()">&times;</button>
            </div>
            <div class="modal-body">
                <div class="candidate-notes">
                    <div class="warning-box">
                        <h4>‚ö†Ô∏è Nh·ªØng ƒëi·ªÅu c·∫ßn l∆∞u √Ω:</h4>
                        <ul>
                            <li><strong>Kh√¥ng ƒë√≥ng ph√≠ tr∆∞·ªõc:</strong> Kh√¥ng ƒë√≥ng b·∫•t k·ª≥ kho·∫£n ph√≠ n√†o tr∆∞·ªõc khi c√≥ h·ª£p ƒë·ªìng ch√≠nh th·ª©c.</li>
                            <li><strong>X√°c minh th√¥ng tin:</strong> Lu√¥n x√°c minh th√¥ng tin c√¥ng ty v√† nh√† tuy·ªÉn d·ª•ng.</li>
                            <li><strong>H·ª£p ƒë·ªìng r√µ r√†ng:</strong> ƒê·∫£m b·∫£o h·ª£p ƒë·ªìng lao ƒë·ªông ƒë∆∞·ª£c k√Ω k·∫øt ƒë·∫ßy ƒë·ªß, r√µ r√†ng.</li>
                            <li><strong>B·∫£o hi·ªÉm:</strong> Ki·ªÉm tra c√°c ch·∫ø ƒë·ªô b·∫£o hi·ªÉm v√† quy·ªÅn l·ª£i.</li>
                            <li><strong>Li√™n h·ªá ch√≠nh th·ª©c:</strong> Ch·ªâ li√™n h·ªá qua c√°c k√™nh ch√≠nh th·ª©c c·ªßa c√¥ng ty.</li>
                        </ul>
                    </div>
                    
                    <div class="requirements-box">
                        <h4>üìã Y√™u c·∫ßu chu·∫©n b·ªã:</h4>
                        <ul>
                            <li>H·ªô chi·∫øu c√≤n h·∫°n t·ªëi thi·ªÉu 18 th√°ng</li>
                            <li>B·∫±ng c·∫•p, ch·ª©ng ch·ªâ li√™n quan</li>
                            <li>Gi·∫•y kh√°m s·ª©c kh·ªèe</li>
                            <li>L√Ω l·ªãch t∆∞ ph√°p</li>
                            <li>·∫¢nh 4x6 (10 t·∫•m)</li>
                        </ul>
                    </div>
                    
                    <div class="contact-box">
                        <h4>üìû Li√™n h·ªá h·ªó tr·ª£:</h4>
                        <p>N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, vui l√≤ng li√™n h·ªá:</p>
                        <p><strong>Hotline:</strong> 1900-xxxx</p>
                        <p><strong>Email:</strong> support@company.com</p>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    document.body.style.overflow = 'hidden';
}

// Function to close notes modal
function closeNotesModal() {
    const modal = document.querySelector('.notes-modal-overlay');
    if (modal) {
        modal.remove();
        document.body.style.overflow = 'auto';
    }
}

// Function to report employer
function reportEmployer() {
    const modal = document.createElement('div');
    modal.className = 'report-modal-overlay';
    modal.innerHTML = `
        <div class="report-modal">
            <div class="modal-header">
                <h3><i class="fas fa-flag"></i> B√°o c√°o nh√† tuy·ªÉn d·ª•ng</h3>
                <button class="close-btn" onclick="closeReportModal()">&times;</button>
            </div>
            <div class="modal-body">
                <form id="reportForm" onsubmit="submitReport(event)">
                    <div class="form-group">
                        <label for="reportReason">L√Ω do b√°o c√°o *</label>
                        <select id="reportReason" name="reportReason" required>
                            <option value="">Ch·ªçn l√Ω do b√°o c√°o</option>
                            <option value="fraud">L·ª´a ƒë·∫£o</option>
                            <option value="fake_job">Tin tuy·ªÉn d·ª•ng gi·∫£</option>
                            <option value="inappropriate">N·ªôi dung kh√¥ng ph√π h·ª£p</option>
                            <option value="spam">Spam</option>
                            <option value="other">Kh√°c</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="reportDetails">Chi ti·∫øt b√°o c√°o *</label>
                        <textarea id="reportDetails" name="reportDetails" rows="4" required placeholder="M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ b·∫°n g·∫∑p ph·∫£i..."></textarea>
                    </div>
                    <div class="form-group">
                        <label for="reporterName">H·ªç v√† t√™n</label>
                        <input type="text" id="reporterName" name="reporterName" placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n">
                    </div>
                    <div class="form-group">
                        <label for="reporterEmail">Email li√™n h·ªá</label>
                        <input type="email" id="reporterEmail" name="reporterEmail" placeholder="Nh·∫≠p email ƒë·ªÉ ch√∫ng t√¥i ph·∫£n h·ªìi">
                    </div>
                    <button type="submit" class="submit-btn report-submit">
                        <i class="fas fa-paper-plane"></i> G·ª≠i b√°o c√°o
                    </button>
                </form>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    document.body.style.overflow = 'hidden';
}

// Function to close report modal
function closeReportModal() {
    const modal = document.querySelector('.report-modal-overlay');
    if (modal) {
        modal.remove();
        document.body.style.overflow = 'auto';
    }
}

// Function to submit report
function submitReport(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const data = {
        reason: formData.get('reportReason'),
        details: formData.get('reportDetails'),
        name: formData.get('reporterName'),
        email: formData.get('reporterEmail')
    };
    
    if (!data.reason || !data.details) {
        alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b√°o c√°o.');
        return;
    }
    
    // Simulate report submission
    alert('C·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i b√°o c√°o. Ch√∫ng t√¥i s·∫Ω xem x√©t v√† x·ª≠ l√Ω trong th·ªùi gian s·ªõm nh·∫•t.');
    closeReportModal();
}

// Initialize page when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    // Add click event listeners to buttons
    const phoneBtn = document.querySelector('.btn-phone');
    const zaloBtn = document.querySelector('.btn-zalo');
    const facebookBtn = document.querySelector('.btn-facebook');
    const consultBtn = document.querySelector('.btn-consult');
    const infoBtn = document.querySelector('.btn-info');
    const saveBtn = document.querySelector('.btn-save');
    const reportBtn = document.querySelector('.btn-report');
    
    if (consultBtn) {
        consultBtn.addEventListener('click', function(e) {
            e.preventDefault();
            showConsultation();
        });
    }
    
    if (infoBtn) {
        infoBtn.addEventListener('click', function(e) {
            e.preventDefault();
            showEmployerInfo();
        });
    }
    
    if (saveBtn) {
        saveBtn.addEventListener('click', function(e) {
            e.preventDefault();
            showCandidateNotes();
        });
    }
    
    if (reportBtn) {
        reportBtn.addEventListener('click', function(e) {
            e.preventDefault();
            reportEmployer();
        });
    }
    
    if (phoneBtn) {
        phoneBtn.addEventListener('click', function(e) {
            e.preventDefault();
            callPhone('0981057683');
        });
    }
    
    if (zaloBtn) {
        zaloBtn.addEventListener('click', function(e) {
            e.preventDefault();
            openZalo('0981057683');
        });
    }
    
    if (facebookBtn) {
        facebookBtn.addEventListener('click', function(e) {
            e.preventDefault();
            openFacebook('https://www.facebook.com/profile.php?id=61558585135713');
        });
    }
});